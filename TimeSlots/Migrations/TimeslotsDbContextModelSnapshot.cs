// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TimeSlots.DataBase;

#nullable disable

namespace TimeSlots.Migrations
{
    [DbContext(typeof(TimeslotsDbContext))]
    partial class TimeslotsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.8");

            modelBuilder.Entity("TimeSlots.Model.Gate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("PlatformId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlatformId");

                    b.ToTable("Gates");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7c846671-27f5-4127-8a28-ac174d34fc86"),
                            Number = 5,
                            PlatformId = new Guid("c7108a75-79ac-46e8-8208-e19d6fe8a252")
                        },
                        new
                        {
                            Id = new Guid("14338de4-7ed1-4e78-8283-eb1b87060263"),
                            Number = 1,
                            PlatformId = new Guid("c7108a75-79ac-46e8-8208-e19d6fe8a252")
                        },
                        new
                        {
                            Id = new Guid("ccca44cb-bdb5-4b9c-abc9-87edd970a81d"),
                            Number = 17,
                            PlatformId = new Guid("c7108a75-79ac-46e8-8208-e19d6fe8a252")
                        });
                });

            modelBuilder.Entity("TimeSlots.Model.Platform", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Platforms");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c7108a75-79ac-46e8-8208-e19d6fe8a252"),
                            Name = "FTC-1"
                        });
                });

            modelBuilder.Entity("TimeSlots.Model.Timeslot", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GateId")
                        .HasColumnType("TEXT");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GateId");

                    b.ToTable("Timeslots");
                });

            modelBuilder.Entity("TimeSlots.Model.Gate", b =>
                {
                    b.HasOne("TimeSlots.Model.Platform", null)
                        .WithMany("Gates")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TimeSlots.Model.Timeslot", b =>
                {
                    b.HasOne("TimeSlots.Model.Gate", "Gate")
                        .WithMany("Timeslots")
                        .HasForeignKey("GateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gate");
                });

            modelBuilder.Entity("TimeSlots.Model.Gate", b =>
                {
                    b.Navigation("Timeslots");
                });

            modelBuilder.Entity("TimeSlots.Model.Platform", b =>
                {
                    b.Navigation("Gates");
                });
#pragma warning restore 612, 618
        }
    }
}
